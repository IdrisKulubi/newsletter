# Worker Dockerfile for background job processing
FROM node:20-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files
COPY package.json pnpm-lock.yaml* ./
RUN pnpm install --frozen-lockfile --prod

# Production worker image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

# Create worker user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 worker

# Install pnpm
RUN npm install -g pnpm tsx

# Copy dependencies and source code
COPY --from=deps /app/node_modules ./node_modules
COPY --chown=worker:nodejs ./src ./src
COPY --chown=worker:nodejs ./package.json ./
COPY --chown=worker:nodejs ./tsconfig.json ./

USER worker

# Health check for worker
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD pnpm tsx src/scripts/worker-health-check.ts || exit 1

# Start the worker
CMD ["pnpm", "tsx", "src/scripts/worker.ts"]